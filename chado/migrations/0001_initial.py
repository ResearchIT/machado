# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-17 15:57
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Acquisition',
            fields=[
                ('acquisition_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('acquisitiondate', models.DateTimeField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True, unique=True)),
                ('uri', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'acquisition',
            },
        ),
        migrations.CreateModel(
            name='Acquisitionprop',
            fields=[
                ('acquisitionprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'acquisitionprop',
            },
        ),
        migrations.CreateModel(
            name='AcquisitionRelationship',
            fields=[
                ('acquisition_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'acquisition_relationship',
            },
        ),
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('analysis_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('program', models.CharField(max_length=255)),
                ('programversion', models.CharField(max_length=255)),
                ('algorithm', models.CharField(blank=True, max_length=255, null=True)),
                ('sourcename', models.CharField(blank=True, max_length=255, null=True)),
                ('sourceversion', models.CharField(blank=True, max_length=255, null=True)),
                ('sourceuri', models.TextField(blank=True, null=True)),
                ('timeexecuted', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'analysis',
            },
        ),
        migrations.CreateModel(
            name='AnalysisCvterm',
            fields=[
                ('analysis_cvterm_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_not', models.BooleanField()),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'analysis_cvterm',
            },
        ),
        migrations.CreateModel(
            name='AnalysisDbxref',
            fields=[
                ('analysis_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_current', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'analysis_dbxref',
            },
        ),
        migrations.CreateModel(
            name='Analysisfeature',
            fields=[
                ('analysisfeature_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rawscore', models.FloatField(blank=True, null=True)),
                ('normscore', models.FloatField(blank=True, null=True)),
                ('significance', models.FloatField(blank=True, null=True)),
                ('identity', models.FloatField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'analysisfeature',
            },
        ),
        migrations.CreateModel(
            name='Analysisfeatureprop',
            fields=[
                ('analysisfeatureprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'analysisfeatureprop',
            },
        ),
        migrations.CreateModel(
            name='Analysisprop',
            fields=[
                ('analysisprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'analysisprop',
            },
        ),
        migrations.CreateModel(
            name='AnalysisPub',
            fields=[
                ('analysis_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'analysis_pub',
            },
        ),
        migrations.CreateModel(
            name='AnalysisRelationship',
            fields=[
                ('analysis_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'analysis_relationship',
            },
        ),
        migrations.CreateModel(
            name='Arraydesign',
            fields=[
                ('arraydesign_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
                ('version', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('array_dimensions', models.TextField(blank=True, null=True)),
                ('element_dimensions', models.TextField(blank=True, null=True)),
                ('num_of_elements', models.IntegerField(blank=True, null=True)),
                ('num_array_columns', models.IntegerField(blank=True, null=True)),
                ('num_array_rows', models.IntegerField(blank=True, null=True)),
                ('num_grid_columns', models.IntegerField(blank=True, null=True)),
                ('num_grid_rows', models.IntegerField(blank=True, null=True)),
                ('num_sub_columns', models.IntegerField(blank=True, null=True)),
                ('num_sub_rows', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'arraydesign',
            },
        ),
        migrations.CreateModel(
            name='Arraydesignprop',
            fields=[
                ('arraydesignprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'arraydesignprop',
            },
        ),
        migrations.CreateModel(
            name='Assay',
            fields=[
                ('assay_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('assaydate', models.DateTimeField(blank=True, null=True)),
                ('arrayidentifier', models.TextField(blank=True, null=True)),
                ('arraybatchidentifier', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'assay',
            },
        ),
        migrations.CreateModel(
            name='AssayBiomaterial',
            fields=[
                ('assay_biomaterial_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'assay_biomaterial',
            },
        ),
        migrations.CreateModel(
            name='AssayProject',
            fields=[
                ('assay_project_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'assay_project',
            },
        ),
        migrations.CreateModel(
            name='Assayprop',
            fields=[
                ('assayprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'assayprop',
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_group',
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'auth_group_permissions',
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_permission',
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user_groups',
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user_user_permissions',
            },
        ),
        migrations.CreateModel(
            name='Biomaterial',
            fields=[
                ('biomaterial_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'biomaterial',
            },
        ),
        migrations.CreateModel(
            name='BiomaterialDbxref',
            fields=[
                ('biomaterial_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'biomaterial_dbxref',
            },
        ),
        migrations.CreateModel(
            name='Biomaterialprop',
            fields=[
                ('biomaterialprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'biomaterialprop',
            },
        ),
        migrations.CreateModel(
            name='BiomaterialRelationship',
            fields=[
                ('biomaterial_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'biomaterial_relationship',
            },
        ),
        migrations.CreateModel(
            name='BiomaterialTreatment',
            fields=[
                ('biomaterial_treatment_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.FloatField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'biomaterial_treatment',
            },
        ),
        migrations.CreateModel(
            name='CellLine',
            fields=[
                ('cell_line_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('uniquename', models.CharField(max_length=255)),
                ('timeaccessioned', models.DateTimeField()),
                ('timelastmodified', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'cell_line',
            },
        ),
        migrations.CreateModel(
            name='CellLineCvterm',
            fields=[
                ('cell_line_cvterm_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cell_line_cvterm',
            },
        ),
        migrations.CreateModel(
            name='CellLineCvtermprop',
            fields=[
                ('cell_line_cvtermprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cell_line_cvtermprop',
            },
        ),
        migrations.CreateModel(
            name='CellLineDbxref',
            fields=[
                ('cell_line_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_current', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'cell_line_dbxref',
            },
        ),
        migrations.CreateModel(
            name='CellLineFeature',
            fields=[
                ('cell_line_feature_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'cell_line_feature',
            },
        ),
        migrations.CreateModel(
            name='CellLineLibrary',
            fields=[
                ('cell_line_library_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'cell_line_library',
            },
        ),
        migrations.CreateModel(
            name='CellLineprop',
            fields=[
                ('cell_lineprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cell_lineprop',
            },
        ),
        migrations.CreateModel(
            name='CellLinepropPub',
            fields=[
                ('cell_lineprop_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'cell_lineprop_pub',
            },
        ),
        migrations.CreateModel(
            name='CellLinePub',
            fields=[
                ('cell_line_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'cell_line_pub',
            },
        ),
        migrations.CreateModel(
            name='CellLineRelationship',
            fields=[
                ('cell_line_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'cell_line_relationship',
            },
        ),
        migrations.CreateModel(
            name='CellLineSynonym',
            fields=[
                ('cell_line_synonym_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_current', models.BooleanField()),
                ('is_internal', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'cell_line_synonym',
            },
        ),
        migrations.CreateModel(
            name='Chadoprop',
            fields=[
                ('chadoprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'chadoprop',
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('channel_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
                ('definition', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'channel',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('contact_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'contact',
            },
        ),
        migrations.CreateModel(
            name='Contactprop',
            fields=[
                ('contactprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'contactprop',
            },
        ),
        migrations.CreateModel(
            name='ContactRelationship',
            fields=[
                ('contact_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'contact_relationship',
            },
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('control_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('row_id', models.IntegerField()),
                ('name', models.TextField(blank=True, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'control',
            },
        ),
        migrations.CreateModel(
            name='Cv',
            fields=[
                ('cv_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('definition', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'cv',
            },
        ),
        migrations.CreateModel(
            name='Cvprop',
            fields=[
                ('cvprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cvprop',
            },
        ),
        migrations.CreateModel(
            name='Cvterm',
            fields=[
                ('cvterm_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024)),
                ('definition', models.TextField(blank=True, null=True)),
                ('is_obsolete', models.IntegerField()),
                ('is_relationshiptype', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cvterm',
            },
        ),
        migrations.CreateModel(
            name='CvtermDbxref',
            fields=[
                ('cvterm_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_for_definition', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cvterm_dbxref',
            },
        ),
        migrations.CreateModel(
            name='Cvtermpath',
            fields=[
                ('cvtermpath_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pathdistance', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'cvtermpath',
            },
        ),
        migrations.CreateModel(
            name='Cvtermprop',
            fields=[
                ('cvtermprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField()),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'cvtermprop',
            },
        ),
        migrations.CreateModel(
            name='CvtermRelationship',
            fields=[
                ('cvterm_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'cvterm_relationship',
            },
        ),
        migrations.CreateModel(
            name='Cvtermsynonym',
            fields=[
                ('cvtermsynonym_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('synonym', models.CharField(max_length=1024)),
            ],
            options={
                'managed': False,
                'db_table': 'cvtermsynonym',
            },
        ),
        migrations.CreateModel(
            name='Db',
            fields=[
                ('db_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('urlprefix', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'db',
            },
        ),
        migrations.CreateModel(
            name='Dbprop',
            fields=[
                ('dbprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'dbprop',
            },
        ),
        migrations.CreateModel(
            name='Dbxref',
            fields=[
                ('dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('accession', models.CharField(max_length=1024)),
                ('version', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dbxref',
            },
        ),
        migrations.CreateModel(
            name='Dbxrefprop',
            fields=[
                ('dbxrefprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField()),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'dbxrefprop',
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_admin_log',
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'django_content_type',
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_migrations',
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_session',
            },
        ),
        migrations.CreateModel(
            name='Eimage',
            fields=[
                ('eimage_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('eimage_data', models.TextField(blank=True, null=True)),
                ('eimage_type', models.CharField(max_length=255)),
                ('image_uri', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'eimage',
            },
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('element_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'element',
            },
        ),
        migrations.CreateModel(
            name='ElementRelationship',
            fields=[
                ('element_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'element_relationship',
            },
        ),
        migrations.CreateModel(
            name='Elementresult',
            fields=[
                ('elementresult_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('signal', models.FloatField()),
            ],
            options={
                'managed': False,
                'db_table': 'elementresult',
            },
        ),
        migrations.CreateModel(
            name='ElementresultRelationship',
            fields=[
                ('elementresult_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'elementresult_relationship',
            },
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('environment_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uniquename', models.TextField(unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'environment',
            },
        ),
        migrations.CreateModel(
            name='EnvironmentCvterm',
            fields=[
                ('environment_cvterm_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'environment_cvterm',
            },
        ),
        migrations.CreateModel(
            name='Expression',
            fields=[
                ('expression_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uniquename', models.TextField(unique=True)),
                ('md5checksum', models.CharField(blank=True, max_length=32, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'expression',
            },
        ),
        migrations.CreateModel(
            name='ExpressionCvterm',
            fields=[
                ('expression_cvterm_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'expression_cvterm',
            },
        ),
        migrations.CreateModel(
            name='ExpressionCvtermprop',
            fields=[
                ('expression_cvtermprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'expression_cvtermprop',
            },
        ),
        migrations.CreateModel(
            name='ExpressionImage',
            fields=[
                ('expression_image_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'expression_image',
            },
        ),
        migrations.CreateModel(
            name='Expressionprop',
            fields=[
                ('expressionprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'expressionprop',
            },
        ),
        migrations.CreateModel(
            name='ExpressionPub',
            fields=[
                ('expression_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'expression_pub',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('feature_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('uniquename', models.TextField()),
                ('residues', models.TextField(blank=True, null=True)),
                ('seqlen', models.BigIntegerField(blank=True, null=True)),
                ('md5checksum', models.CharField(blank=True, max_length=32, null=True)),
                ('is_analysis', models.BooleanField()),
                ('is_obsolete', models.BooleanField()),
                ('timeaccessioned', models.DateTimeField()),
                ('timelastmodified', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'feature',
            },
        ),
        migrations.CreateModel(
            name='FeatureContact',
            fields=[
                ('feature_contact_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'feature_contact',
            },
        ),
        migrations.CreateModel(
            name='FeatureCvterm',
            fields=[
                ('feature_cvterm_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_not', models.BooleanField()),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'feature_cvterm',
            },
        ),
        migrations.CreateModel(
            name='FeatureCvtermDbxref',
            fields=[
                ('feature_cvterm_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'feature_cvterm_dbxref',
            },
        ),
        migrations.CreateModel(
            name='FeatureCvtermprop',
            fields=[
                ('feature_cvtermprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'feature_cvtermprop',
            },
        ),
        migrations.CreateModel(
            name='FeatureCvtermPub',
            fields=[
                ('feature_cvterm_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'feature_cvterm_pub',
            },
        ),
        migrations.CreateModel(
            name='FeatureDbxref',
            fields=[
                ('feature_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_current', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'feature_dbxref',
            },
        ),
        migrations.CreateModel(
            name='FeatureExpression',
            fields=[
                ('feature_expression_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'feature_expression',
            },
        ),
        migrations.CreateModel(
            name='FeatureExpressionprop',
            fields=[
                ('feature_expressionprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'feature_expressionprop',
            },
        ),
        migrations.CreateModel(
            name='FeatureGenotype',
            fields=[
                ('feature_genotype_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField()),
                ('cgroup', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'feature_genotype',
            },
        ),
        migrations.CreateModel(
            name='Featureloc',
            fields=[
                ('featureloc_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('fmin', models.BigIntegerField(blank=True, null=True)),
                ('is_fmin_partial', models.BooleanField()),
                ('fmax', models.BigIntegerField(blank=True, null=True)),
                ('is_fmax_partial', models.BooleanField()),
                ('strand', models.SmallIntegerField(blank=True, null=True)),
                ('phase', models.IntegerField(blank=True, null=True)),
                ('residue_info', models.TextField(blank=True, null=True)),
                ('locgroup', models.IntegerField()),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'featureloc',
            },
        ),
        migrations.CreateModel(
            name='FeaturelocPub',
            fields=[
                ('featureloc_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'featureloc_pub',
            },
        ),
        migrations.CreateModel(
            name='Featuremap',
            fields=[
                ('featuremap_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'featuremap',
            },
        ),
        migrations.CreateModel(
            name='FeaturemapContact',
            fields=[
                ('featuremap_contact_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'featuremap_contact',
            },
        ),
        migrations.CreateModel(
            name='FeaturemapDbxref',
            fields=[
                ('featuremap_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_current', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'featuremap_dbxref',
            },
        ),
        migrations.CreateModel(
            name='FeaturemapOrganism',
            fields=[
                ('featuremap_organism_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'featuremap_organism',
            },
        ),
        migrations.CreateModel(
            name='Featuremapprop',
            fields=[
                ('featuremapprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'featuremapprop',
            },
        ),
        migrations.CreateModel(
            name='FeaturemapPub',
            fields=[
                ('featuremap_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'featuremap_pub',
            },
        ),
        migrations.CreateModel(
            name='FeaturePhenotype',
            fields=[
                ('feature_phenotype_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'feature_phenotype',
            },
        ),
        migrations.CreateModel(
            name='Featurepos',
            fields=[
                ('featurepos_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('mappos', models.FloatField()),
            ],
            options={
                'managed': False,
                'db_table': 'featurepos',
            },
        ),
        migrations.CreateModel(
            name='Featureposprop',
            fields=[
                ('featureposprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'featureposprop',
            },
        ),
        migrations.CreateModel(
            name='Featureprop',
            fields=[
                ('featureprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'featureprop',
            },
        ),
        migrations.CreateModel(
            name='FeaturepropPub',
            fields=[
                ('featureprop_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'featureprop_pub',
            },
        ),
        migrations.CreateModel(
            name='FeaturePub',
            fields=[
                ('feature_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'feature_pub',
            },
        ),
        migrations.CreateModel(
            name='FeaturePubprop',
            fields=[
                ('feature_pubprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'feature_pubprop',
            },
        ),
        migrations.CreateModel(
            name='Featurerange',
            fields=[
                ('featurerange_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rangestr', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'featurerange',
            },
        ),
        migrations.CreateModel(
            name='FeatureRelationship',
            fields=[
                ('feature_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'feature_relationship',
            },
        ),
        migrations.CreateModel(
            name='FeatureRelationshipprop',
            fields=[
                ('feature_relationshipprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'feature_relationshipprop',
            },
        ),
        migrations.CreateModel(
            name='FeatureRelationshippropPub',
            fields=[
                ('feature_relationshipprop_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'feature_relationshipprop_pub',
            },
        ),
        migrations.CreateModel(
            name='FeatureRelationshipPub',
            fields=[
                ('feature_relationship_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'feature_relationship_pub',
            },
        ),
        migrations.CreateModel(
            name='FeatureSynonym',
            fields=[
                ('feature_synonym_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_current', models.BooleanField()),
                ('is_internal', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'feature_synonym',
            },
        ),
        migrations.CreateModel(
            name='Genotype',
            fields=[
                ('genotype_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('uniquename', models.TextField(unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'genotype',
            },
        ),
        migrations.CreateModel(
            name='Genotypeprop',
            fields=[
                ('genotypeprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'genotypeprop',
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('library_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('uniquename', models.TextField()),
                ('is_obsolete', models.IntegerField()),
                ('timeaccessioned', models.DateTimeField()),
                ('timelastmodified', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'library',
            },
        ),
        migrations.CreateModel(
            name='LibraryContact',
            fields=[
                ('library_contact_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'library_contact',
            },
        ),
        migrations.CreateModel(
            name='LibraryCvterm',
            fields=[
                ('library_cvterm_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'library_cvterm',
            },
        ),
        migrations.CreateModel(
            name='LibraryDbxref',
            fields=[
                ('library_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_current', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'library_dbxref',
            },
        ),
        migrations.CreateModel(
            name='LibraryExpression',
            fields=[
                ('library_expression_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'library_expression',
            },
        ),
        migrations.CreateModel(
            name='LibraryExpressionprop',
            fields=[
                ('library_expressionprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'library_expressionprop',
            },
        ),
        migrations.CreateModel(
            name='LibraryFeature',
            fields=[
                ('library_feature_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'library_feature',
            },
        ),
        migrations.CreateModel(
            name='LibraryFeatureprop',
            fields=[
                ('library_featureprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'library_featureprop',
            },
        ),
        migrations.CreateModel(
            name='Libraryprop',
            fields=[
                ('libraryprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'libraryprop',
            },
        ),
        migrations.CreateModel(
            name='LibrarypropPub',
            fields=[
                ('libraryprop_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'libraryprop_pub',
            },
        ),
        migrations.CreateModel(
            name='LibraryPub',
            fields=[
                ('library_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'library_pub',
            },
        ),
        migrations.CreateModel(
            name='LibraryRelationship',
            fields=[
                ('library_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'library_relationship',
            },
        ),
        migrations.CreateModel(
            name='LibraryRelationshipPub',
            fields=[
                ('library_relationship_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'library_relationship_pub',
            },
        ),
        migrations.CreateModel(
            name='LibrarySynonym',
            fields=[
                ('library_synonym_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_current', models.BooleanField()),
                ('is_internal', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'library_synonym',
            },
        ),
        migrations.CreateModel(
            name='Magedocumentation',
            fields=[
                ('magedocumentation_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('row_id', models.IntegerField()),
                ('mageidentifier', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'magedocumentation',
            },
        ),
        migrations.CreateModel(
            name='Mageml',
            fields=[
                ('mageml_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('mage_package', models.TextField()),
                ('mage_ml', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'mageml',
            },
        ),
        migrations.CreateModel(
            name='NdExperiment',
            fields=[
                ('nd_experiment_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_experiment',
            },
        ),
        migrations.CreateModel(
            name='NdExperimentAnalysis',
            fields=[
                ('nd_experiment_analysis_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_experiment_analysis',
            },
        ),
        migrations.CreateModel(
            name='NdExperimentContact',
            fields=[
                ('nd_experiment_contact_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_experiment_contact',
            },
        ),
        migrations.CreateModel(
            name='NdExperimentDbxref',
            fields=[
                ('nd_experiment_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_experiment_dbxref',
            },
        ),
        migrations.CreateModel(
            name='NdExperimentGenotype',
            fields=[
                ('nd_experiment_genotype_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_experiment_genotype',
            },
        ),
        migrations.CreateModel(
            name='NdExperimentPhenotype',
            fields=[
                ('nd_experiment_phenotype_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_experiment_phenotype',
            },
        ),
        migrations.CreateModel(
            name='NdExperimentProject',
            fields=[
                ('nd_experiment_project_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_experiment_project',
            },
        ),
        migrations.CreateModel(
            name='NdExperimentprop',
            fields=[
                ('nd_experimentprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'nd_experimentprop',
            },
        ),
        migrations.CreateModel(
            name='NdExperimentProtocol',
            fields=[
                ('nd_experiment_protocol_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_experiment_protocol',
            },
        ),
        migrations.CreateModel(
            name='NdExperimentPub',
            fields=[
                ('nd_experiment_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_experiment_pub',
            },
        ),
        migrations.CreateModel(
            name='NdExperimentStock',
            fields=[
                ('nd_experiment_stock_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_experiment_stock',
            },
        ),
        migrations.CreateModel(
            name='NdExperimentStockDbxref',
            fields=[
                ('nd_experiment_stock_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_experiment_stock_dbxref',
            },
        ),
        migrations.CreateModel(
            name='NdExperimentStockprop',
            fields=[
                ('nd_experiment_stockprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'nd_experiment_stockprop',
            },
        ),
        migrations.CreateModel(
            name='NdGeolocation',
            fields=[
                ('nd_geolocation_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('geodetic_datum', models.CharField(blank=True, max_length=32, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_geolocation',
            },
        ),
        migrations.CreateModel(
            name='NdGeolocationprop',
            fields=[
                ('nd_geolocationprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'nd_geolocationprop',
            },
        ),
        migrations.CreateModel(
            name='NdProtocol',
            fields=[
                ('nd_protocol_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_protocol',
            },
        ),
        migrations.CreateModel(
            name='NdProtocolprop',
            fields=[
                ('nd_protocolprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'nd_protocolprop',
            },
        ),
        migrations.CreateModel(
            name='NdProtocolReagent',
            fields=[
                ('nd_protocol_reagent_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_protocol_reagent',
            },
        ),
        migrations.CreateModel(
            name='NdReagent',
            fields=[
                ('nd_reagent_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_reagent',
            },
        ),
        migrations.CreateModel(
            name='NdReagentprop',
            fields=[
                ('nd_reagentprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'nd_reagentprop',
            },
        ),
        migrations.CreateModel(
            name='NdReagentRelationship',
            fields=[
                ('nd_reagent_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'nd_reagent_relationship',
            },
        ),
        migrations.CreateModel(
            name='Organism',
            fields=[
                ('organism_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('genus', models.CharField(max_length=255)),
                ('species', models.CharField(max_length=255)),
                ('common_name', models.CharField(blank=True, max_length=255, null=True)),
                ('infraspecific_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'organism',
            },
        ),
        migrations.CreateModel(
            name='OrganismCvterm',
            fields=[
                ('organism_cvterm_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'organism_cvterm',
            },
        ),
        migrations.CreateModel(
            name='OrganismCvtermprop',
            fields=[
                ('organism_cvtermprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'organism_cvtermprop',
            },
        ),
        migrations.CreateModel(
            name='OrganismDbxref',
            fields=[
                ('organism_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'organism_dbxref',
            },
        ),
        migrations.CreateModel(
            name='Organismprop',
            fields=[
                ('organismprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'organismprop',
            },
        ),
        migrations.CreateModel(
            name='OrganismpropPub',
            fields=[
                ('organismprop_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'organismprop_pub',
            },
        ),
        migrations.CreateModel(
            name='OrganismPub',
            fields=[
                ('organism_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'organism_pub',
            },
        ),
        migrations.CreateModel(
            name='OrganismRelationship',
            fields=[
                ('organism_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'organism_relationship',
            },
        ),
        migrations.CreateModel(
            name='Phendesc',
            fields=[
                ('phendesc_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'phendesc',
            },
        ),
        migrations.CreateModel(
            name='Phenotype',
            fields=[
                ('phenotype_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uniquename', models.TextField(unique=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'phenotype',
            },
        ),
        migrations.CreateModel(
            name='PhenotypeComparison',
            fields=[
                ('phenotype_comparison_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'phenotype_comparison',
            },
        ),
        migrations.CreateModel(
            name='PhenotypeComparisonCvterm',
            fields=[
                ('phenotype_comparison_cvterm_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'phenotype_comparison_cvterm',
            },
        ),
        migrations.CreateModel(
            name='PhenotypeCvterm',
            fields=[
                ('phenotype_cvterm_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'phenotype_cvterm',
            },
        ),
        migrations.CreateModel(
            name='Phenotypeprop',
            fields=[
                ('phenotypeprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'phenotypeprop',
            },
        ),
        migrations.CreateModel(
            name='Phenstatement',
            fields=[
                ('phenstatement_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'phenstatement',
            },
        ),
        migrations.CreateModel(
            name='Phylonode',
            fields=[
                ('phylonode_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('left_idx', models.IntegerField()),
                ('right_idx', models.IntegerField()),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('distance', models.FloatField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'phylonode',
            },
        ),
        migrations.CreateModel(
            name='PhylonodeDbxref',
            fields=[
                ('phylonode_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'phylonode_dbxref',
            },
        ),
        migrations.CreateModel(
            name='PhylonodeOrganism',
            fields=[
                ('phylonode_organism_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'phylonode_organism',
            },
        ),
        migrations.CreateModel(
            name='Phylonodeprop',
            fields=[
                ('phylonodeprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField()),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'phylonodeprop',
            },
        ),
        migrations.CreateModel(
            name='PhylonodePub',
            fields=[
                ('phylonode_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'phylonode_pub',
            },
        ),
        migrations.CreateModel(
            name='PhylonodeRelationship',
            fields=[
                ('phylonode_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'phylonode_relationship',
            },
        ),
        migrations.CreateModel(
            name='Phylotree',
            fields=[
                ('phylotree_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'phylotree',
            },
        ),
        migrations.CreateModel(
            name='Phylotreeprop',
            fields=[
                ('phylotreeprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'phylotreeprop',
            },
        ),
        migrations.CreateModel(
            name='PhylotreePub',
            fields=[
                ('phylotree_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'phylotree_pub',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'project',
            },
        ),
        migrations.CreateModel(
            name='ProjectAnalysis',
            fields=[
                ('project_analysis_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'project_analysis',
            },
        ),
        migrations.CreateModel(
            name='ProjectContact',
            fields=[
                ('project_contact_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'project_contact',
            },
        ),
        migrations.CreateModel(
            name='ProjectDbxref',
            fields=[
                ('project_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_current', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'project_dbxref',
            },
        ),
        migrations.CreateModel(
            name='ProjectFeature',
            fields=[
                ('project_feature_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'project_feature',
            },
        ),
        migrations.CreateModel(
            name='Projectprop',
            fields=[
                ('projectprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projectprop',
            },
        ),
        migrations.CreateModel(
            name='ProjectPub',
            fields=[
                ('project_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'project_pub',
            },
        ),
        migrations.CreateModel(
            name='ProjectRelationship',
            fields=[
                ('project_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'project_relationship',
            },
        ),
        migrations.CreateModel(
            name='ProjectStock',
            fields=[
                ('project_stock_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'project_stock',
            },
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('protocol_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
                ('uri', models.TextField(blank=True, null=True)),
                ('protocoldescription', models.TextField(blank=True, null=True)),
                ('hardwaredescription', models.TextField(blank=True, null=True)),
                ('softwaredescription', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'protocol',
            },
        ),
        migrations.CreateModel(
            name='Protocolparam',
            fields=[
                ('protocolparam_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'protocolparam',
            },
        ),
        migrations.CreateModel(
            name='Pub',
            fields=[
                ('pub_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, null=True)),
                ('volumetitle', models.TextField(blank=True, null=True)),
                ('volume', models.CharField(blank=True, max_length=255, null=True)),
                ('series_name', models.CharField(blank=True, max_length=255, null=True)),
                ('issue', models.CharField(blank=True, max_length=255, null=True)),
                ('pyear', models.CharField(blank=True, max_length=255, null=True)),
                ('pages', models.CharField(blank=True, max_length=255, null=True)),
                ('miniref', models.CharField(blank=True, max_length=255, null=True)),
                ('uniquename', models.TextField(unique=True)),
                ('is_obsolete', models.NullBooleanField()),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('pubplace', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'pub',
            },
        ),
        migrations.CreateModel(
            name='Pubauthor',
            fields=[
                ('pubauthor_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField()),
                ('editor', models.NullBooleanField()),
                ('surname', models.CharField(max_length=100)),
                ('givennames', models.CharField(blank=True, max_length=100, null=True)),
                ('suffix', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'pubauthor',
            },
        ),
        migrations.CreateModel(
            name='PubauthorContact',
            fields=[
                ('pubauthor_contact_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'pubauthor_contact',
            },
        ),
        migrations.CreateModel(
            name='PubDbxref',
            fields=[
                ('pub_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_current', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'pub_dbxref',
            },
        ),
        migrations.CreateModel(
            name='Pubprop',
            fields=[
                ('pubprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField()),
                ('rank', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'pubprop',
            },
        ),
        migrations.CreateModel(
            name='PubRelationship',
            fields=[
                ('pub_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'pub_relationship',
            },
        ),
        migrations.CreateModel(
            name='Quantification',
            fields=[
                ('quantification_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('quantificationdate', models.DateTimeField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('uri', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'quantification',
            },
        ),
        migrations.CreateModel(
            name='Quantificationprop',
            fields=[
                ('quantificationprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'quantificationprop',
            },
        ),
        migrations.CreateModel(
            name='QuantificationRelationship',
            fields=[
                ('quantification_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'quantification_relationship',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('stock_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('uniquename', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('is_obsolete', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'stock',
            },
        ),
        migrations.CreateModel(
            name='Stockcollection',
            fields=[
                ('stockcollection_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('uniquename', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'stockcollection',
            },
        ),
        migrations.CreateModel(
            name='StockcollectionDb',
            fields=[
                ('stockcollection_db_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'stockcollection_db',
            },
        ),
        migrations.CreateModel(
            name='Stockcollectionprop',
            fields=[
                ('stockcollectionprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'stockcollectionprop',
            },
        ),
        migrations.CreateModel(
            name='StockcollectionStock',
            fields=[
                ('stockcollection_stock_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'stockcollection_stock',
            },
        ),
        migrations.CreateModel(
            name='StockCvterm',
            fields=[
                ('stock_cvterm_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_not', models.BooleanField()),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'stock_cvterm',
            },
        ),
        migrations.CreateModel(
            name='StockCvtermprop',
            fields=[
                ('stock_cvtermprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'stock_cvtermprop',
            },
        ),
        migrations.CreateModel(
            name='StockDbxref',
            fields=[
                ('stock_dbxref_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_current', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'stock_dbxref',
            },
        ),
        migrations.CreateModel(
            name='StockDbxrefprop',
            fields=[
                ('stock_dbxrefprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'stock_dbxrefprop',
            },
        ),
        migrations.CreateModel(
            name='StockFeature',
            fields=[
                ('stock_feature_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'stock_feature',
            },
        ),
        migrations.CreateModel(
            name='StockFeaturemap',
            fields=[
                ('stock_featuremap_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'stock_featuremap',
            },
        ),
        migrations.CreateModel(
            name='StockGenotype',
            fields=[
                ('stock_genotype_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'stock_genotype',
            },
        ),
        migrations.CreateModel(
            name='StockLibrary',
            fields=[
                ('stock_library_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'stock_library',
            },
        ),
        migrations.CreateModel(
            name='Stockprop',
            fields=[
                ('stockprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'stockprop',
            },
        ),
        migrations.CreateModel(
            name='StockpropPub',
            fields=[
                ('stockprop_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'stockprop_pub',
            },
        ),
        migrations.CreateModel(
            name='StockPub',
            fields=[
                ('stock_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'stock_pub',
            },
        ),
        migrations.CreateModel(
            name='StockRelationship',
            fields=[
                ('stock_relationship_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'stock_relationship',
            },
        ),
        migrations.CreateModel(
            name='StockRelationshipCvterm',
            fields=[
                ('stock_relationship_cvterm_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'stock_relationship_cvterm',
            },
        ),
        migrations.CreateModel(
            name='StockRelationshipPub',
            fields=[
                ('stock_relationship_pub_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'stock_relationship_pub',
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('study_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'study',
            },
        ),
        migrations.CreateModel(
            name='StudyAssay',
            fields=[
                ('study_assay_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'study_assay',
            },
        ),
        migrations.CreateModel(
            name='Studydesign',
            fields=[
                ('studydesign_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'studydesign',
            },
        ),
        migrations.CreateModel(
            name='Studydesignprop',
            fields=[
                ('studydesignprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'studydesignprop',
            },
        ),
        migrations.CreateModel(
            name='Studyfactor',
            fields=[
                ('studyfactor_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'studyfactor',
            },
        ),
        migrations.CreateModel(
            name='Studyfactorvalue',
            fields=[
                ('studyfactorvalue_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('factorvalue', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'studyfactorvalue',
            },
        ),
        migrations.CreateModel(
            name='Studyprop',
            fields=[
                ('studyprop_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'studyprop',
            },
        ),
        migrations.CreateModel(
            name='StudypropFeature',
            fields=[
                ('studyprop_feature_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'studyprop_feature',
            },
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                ('synonym_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('synonym_sgml', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'synonym',
            },
        ),
        migrations.CreateModel(
            name='Tableinfo',
            fields=[
                ('tableinfo_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('primary_key_column', models.CharField(blank=True, max_length=30, null=True)),
                ('is_view', models.IntegerField()),
                ('view_on_table_id', models.BigIntegerField(blank=True, null=True)),
                ('superclass_table_id', models.BigIntegerField(blank=True, null=True)),
                ('is_updateable', models.IntegerField()),
                ('modification_date', models.DateField()),
            ],
            options={
                'managed': False,
                'db_table': 'tableinfo',
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('treatment_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField()),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'treatment',
            },
        ),
    ]
